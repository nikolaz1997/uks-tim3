# Generated by Django 3.2.16 on 2023-01-03 19:37

import app_models.enums
from django.db import migrations, models
import django.db.models.deletion
import enumfields.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('deleted', models.BooleanField()),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('deleted', models.BooleanField()),
                ('content', models.TextField()),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('deleted', models.BooleanField()),
                ('title', models.CharField(max_length=30)),
                ('description', models.TextField()),
                ('isPrivate', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('deleted', models.BooleanField()),
                ('username', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(max_length=100)),
                ('firstName', models.CharField(max_length=30)),
                ('lastName', models.CharField(max_length=30)),
                ('bio', models.TextField()),
                ('company', models.CharField(max_length=30)),
                ('website', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Wiki',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('deleted', models.BooleanField()),
                ('title', models.CharField(max_length=30)),
                ('content', models.TextField()),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_models.repository')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='repository',
            name='collabarators',
            field=models.ManyToManyField(related_name='collabarator_user', to='app_models.User'),
        ),
        migrations.AddField(
            model_name='repository',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_user', to='app_models.user'),
        ),
        migrations.CreateModel(
            name='Reaction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('deleted', models.BooleanField()),
                ('reaction', enumfields.fields.EnumField(enum=app_models.enums.ReactionType, max_length=10)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_models.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_models.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PullRequest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('deleted', models.BooleanField()),
                ('title', models.CharField(max_length=30)),
                ('description', models.TextField()),
                ('state', enumfields.fields.EnumField(default=1, enum=app_models.enums.PullRequestStatus, max_length=10)),
                ('base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='base_branch', to='app_models.branch')),
                ('compare', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compare_branch', to='app_models.branch')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_models.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('deleted', models.BooleanField()),
                ('title', models.CharField(max_length=30)),
                ('description', models.TextField()),
                ('color', models.CharField(max_length=6)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('deleted', models.BooleanField()),
                ('title', models.CharField(max_length=30)),
                ('description', models.TextField()),
                ('state', enumfields.fields.EnumField(default=1, enum=app_models.enums.IssueStatus, max_length=10)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_models.user')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_models.repository')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Commit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('deleted', models.BooleanField()),
                ('message', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_models.branch')),
                ('commited_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_models.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_models.user'),
        ),
        migrations.AddField(
            model_name='branch',
            name='repository',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_models.repository'),
        ),
    ]
